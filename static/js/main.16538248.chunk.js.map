{"version":3,"sources":["storage/user.js","utils/uuid.js","utils/eventListenerClass.js","components/chat/chatHistory/store.js","utils/socket.js","utils/webRTC.js","components/login/index.js","components/usersList/index.js","components/videoGrid/videoBox/index.js","components/videoGrid/streamControls/assets/camera.svg","components/videoGrid/streamControls/assets/microphone.svg","components/videoGrid/streamControls/index.js","components/videoGrid/index.js","components/chat/chatHistory/index.js","components/chat/chatInput/index.js","components/chat/index.js","App.js","reportWebVitals.js","index.js"],"names":["user_instance","this","_eventListeners","_user","id","name","room","roomId","_localStream","value","window","location","pathname","substr","s4","Math","floor","random","toString","uuid","EventListenerClass","type","handler","undefined","push","filter","i","chatHistory_instance","_log","data","time","Date","forEach","socket_instance","onConnect","socket","connected","onError","onLogged","onRoomData","users","onBeforeUnload","emit","onMessage","sendNewMessage","message","text","sendRTCOverSocket","to","user","io","reconnectionDelayMax","on","socketReceived","webRTC_newPeer","JSON","stringify","username","webRTC_instance","peers","hasOwnProperty","channel","close","e","console","error","_streams","_connectionsCount","server","iceServers","url","credential","log","count","keys","stream","a","createConnection","pc","connection","initConnection","initMedia","createOffer","then","offer","setLocalDescription","catch","remoteCandidateReceived","remoteOfferReceived","remoteAnswerReceived","answer","setRemoteDescription","candidate","addIceCandidate","createAnswer","onicecandidate","event","oniceconnectionstatechange","iceConnectionState","connectionsCount","ontrack","streams","addStream","localVideo","document","getElementById","srcObject","localStream","getTracks","track","addTrack","RTCPeerConnection","Login","useState","setUsername","setError","setConnected","useEffect","addEventListener","onConnectionChange","removeEventListener","handlerOnClick","connect","className","htmlFor","style","color","placeholder","onChange","target","onKeyDown","keyCode","required","onClick","UserList","usersList","setUsersList","onUsersChange","map","VideoBox","videoId","title","videoEl","useRef","handleStream","current","getStream","ref","autoPlay","muted","StreamControls","getVideoTracks","enabled","video","setVideo","audio","setAudio","videoTrack","audioTrack","getAudioTracks","backgroundColor","src","camera_icon","alt","microphone_icon","VideoGrid","selectedVideo","handleClick","ChatHistory","messages","setMessages","v","getHours","getMinutes","whiteSpace","AutoTextArea","textAreaRef","setText","textAreaHeight","setTextAreaHeight","scrollHeight","sendMessage","msg","trim","length","rows","height","flexGrow","split","shiftKey","preventDefault","Chat","App","logged","setLogged","navigator","mediaDevices","getUserMedia","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.16538248.chunk.js","sourcesContent":["import {uuid} from \"../utils/uuid\";\r\n\r\nclass user {\r\n    constructor() {\r\n        this._eventListeners = {};\r\n        this._user = {id: '', name: '', room: this.roomId};\r\n        this._localStream = null;\r\n    }\r\n\r\n    get localStream() {\r\n        return this._localStream;\r\n    }\r\n\r\n    set localStream(value) {\r\n        this._localStream = value;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    set user(value) {\r\n        this._user = value;\r\n    }\r\n\r\n    get roomId() {\r\n        let room = window.location.pathname.substr(1);\r\n        if (!room) {\r\n            room = uuid();\r\n            window.location = room;\r\n        }\r\n        return room;\r\n    }\r\n}\r\n\r\nexport const user_instance = new user();","\r\nexport const uuid = function() {\r\n    const s4 = function () {\r\n        return Math.floor(Math.random() * 0x10000).toString(16);\r\n    };\r\n    return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n}","export default class EventListenerClass{\r\n    constructor() {\r\n        this._eventListeners = {};\r\n    }\r\n\r\n    addEventListener(type, handler) {\r\n        if (this._eventListeners[type] === undefined)\r\n            this._eventListeners[type] = [];\r\n        this._eventListeners[type].push(handler);\r\n    }\r\n\r\n    removeEventListener(type, handler) {\r\n        this._eventListeners[type] = this._eventListeners[type]\r\n            .filter(i => i.toString() !== handler.toString());\r\n    }\r\n}","import EventListenerClass from \"../../../utils/eventListenerClass\";\r\n\r\nclass store  extends EventListenerClass{\r\n    constructor() {\r\n        super();\r\n        this._eventListeners = {};\r\n        this._log = [];\r\n        //this._onLogChange = onLogChange;\r\n    }\r\n\r\n    get log() {\r\n        return this._log;\r\n    }\r\n\r\n    push(value) {\r\n        value.data.time = new Date(value.data.time);\r\n        this._log.push(value);\r\n        this._eventListeners['newMessage']?.forEach(i => i(value));\r\n        this._eventListeners['newMessages']?.forEach(i => i(this._log));\r\n    }\r\n}\r\n\r\nexport const chatHistory_instance = new store();","import {io} from \"socket.io-client\";\r\nimport {webRTC_newPeer, socketReceived} from \"./webRTC\";\r\nimport {user_instance} from \"../storage/user\";\r\nimport {chatHistory_instance} from \"../components/chat/chatHistory/store\";\r\nimport EventListenerClass from \"./eventListenerClass\";\r\n\r\nconst ENDPOINT = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\r\n    'http://localhost:4001' : 'https://webrtc-chat-api.herokuapp.com/';\r\n\r\n\r\nclass socket extends EventListenerClass {\r\n    constructor() {\r\n        super();\r\n        this._eventListeners = {};\r\n        this.socket = io(ENDPOINT, {\r\n            reconnectionDelayMax: 10000\r\n        });\r\n        this.socket.on(\"connect\", this.onConnect);\r\n        this.socket.on(\"disconnect\", this.onConnect);\r\n    }\r\n\r\n    connect({user, room}) {\r\n        if (!this.socket.connected) {\r\n            return;\r\n        }\r\n        this.socket.on(\"webrtc\", socketReceived);\r\n        this.socket.on(\"webrtc_new_peer\", webRTC_newPeer);\r\n        this.socket.on(\"roomData\", this.onRoomData);\r\n        this.socket.on(\"message\", this.onMessage);\r\n        this.socket.on(\"logged\", this.onLogged);\r\n        this.socket.on(\"error\", this.onError);\r\n\r\n\r\n        // Сразу отправляем запрос на вход в комнату\r\n        this.socket.emit(\"join\", JSON.stringify({username: user, room: room}));\r\n    }\r\n\r\n    onConnect = (data) => {\r\n        this._eventListeners['connectionChange']?.forEach(i => {\r\n            i(this.socket.connected);\r\n        });\r\n    }\r\n\r\n    onError = (data) =>  {\r\n        this._eventListeners['error']?.forEach(i => {\r\n            i(data);\r\n        });\r\n    }\r\n\r\n    onLogged = (data) =>  {\r\n        this._eventListeners['logged']?.forEach(i => {\r\n            i(data);\r\n        });\r\n    }\r\n\r\n    onRoomData = (data) =>  {\r\n        this._eventListeners['usersChange']?.forEach(i => {\r\n            i(data.users);\r\n        });\r\n    }\r\n\r\n    onBeforeUnload = () =>  {\r\n        this.socket.emit('disconnect');\r\n    }\r\n\r\n\r\n    onMessage = (data) =>  {\r\n        chatHistory_instance.push(data);\r\n    }\r\n\r\n    sendNewMessage = (message) =>  {\r\n        socket_instance.socket.emit(\"sendMessage\", {text: message});\r\n    }\r\n\r\n    sendRTCOverSocket = (to, type, message) =>  {\r\n        socket_instance.socket.emit(\"webrtc\", {id: user_instance.user.id, to: to, type: type, data: message});\r\n    }\r\n}\r\n\r\nexport const socket_instance = new socket();","import {socket_instance} from \"./socket\";\r\nimport EventListenerClass from \"./eventListenerClass\";\r\nimport {user_instance} from \"../storage/user\";\r\n\r\nclass webRTC extends EventListenerClass {\r\n    constructor() {\r\n        super();\r\n        this._streams = {};\r\n        this._eventListeners = {};\r\n        this._connectionsCount = 0;\r\n        this.peers = {};\r\n        this.server = {\r\n            iceServers: [\r\n                {\r\n                    url: 'turn:webrtc-chat-api.herokuapp.com:3478',\r\n                    username: 'turnclient',\r\n                    credential: '$0mep@$$w0rd'\r\n                },\r\n                {url: 'stun:webrtc-chat-api.herokuapp.com'},\r\n                {\r\n                    url: 'turn:217.150.77.131:3478',\r\n                    username: 'turnclient',\r\n                    credential: '$0mep@$$w0rd'\r\n                },\r\n                {url: 'stun:217.150.77.131:3478'},\r\n                {url: 'stun:stun.l.google.com:19302'},\r\n                {url: 'stun:stun.l.google.com:19302'},\r\n                {url: 'stun:stun1.l.google.com:19302'},\r\n            ]\r\n        };\r\n        console.log('webRTC created!');\r\n    }\r\n\r\n    get connectionsCount() {\r\n        return this._connectionsCount;\r\n\r\n    }\r\n\r\n    set connectionsCount(value) {\r\n        this._connectionsCount = value;\r\n        this._eventListeners['connectionsChange']?.forEach(i => {\r\n            i({\r\n                count: this._connectionsCount,\r\n                peers: this.peers.keys\r\n            })\r\n        });\r\n    }\r\n\r\n    addStream(id, stream) {\r\n        this._streams[id] = stream;\r\n        this._eventListeners[`streamAdded-${id}`]?.forEach(i => {\r\n            if (this._streams[id] !== undefined)\r\n                i(this._streams[id])\r\n        });\r\n    }\r\n\r\n    getStream(id) {\r\n        return this._streams[id];\r\n    }\r\n\r\n    onBeforeUnload = () => {\r\n        for (let id in webRTC_instance.peers) {\r\n            if (webRTC_instance.peers.hasOwnProperty(id)) {\r\n                if (webRTC_instance.peers[id].channel !== undefined) {\r\n                    try {\r\n                        webRTC_instance.peers[id].channel.close();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const webRTC_instance = new webRTC();\r\n\r\n\r\nexport async function webRTC_newPeer({user, data}) {\r\n    if (user !== 'SERVER')\r\n        return;\r\n    const {id, name, room} = data;\r\n    console.log('Creating new peer', [user, data]);\r\n    createConnection(id);\r\n    const pc = webRTC_instance.peers[id].connection;\r\n\r\n    initConnection(id,  pc);\r\n\r\n    await initMedia(id, pc);\r\n    await pc.createOffer().then(offer => {\r\n        return pc.setLocalDescription(offer).then(() => {\r\n            socket_instance.sendRTCOverSocket(id, \"offer\", offer);\r\n        }).catch(error => console.error('Error set local description', error));\r\n    }).catch(error => console.error('Error create offer', error));\r\n\r\n\r\n}\r\n\r\nexport function socketReceived({id, to, type, data}) {\r\n    //console.log({id, to, type, data});\r\n    switch (type) {\r\n        case \"candidate\":\r\n            remoteCandidateReceived(id, data);\r\n            break;\r\n        case \"offer\":\r\n            remoteOfferReceived(id, data);\r\n            break;\r\n        case \"answer\":\r\n            remoteAnswerReceived(id, data);\r\n            break;\r\n        default:\r\n            console.log(`Unknown type received from socket:`);\r\n            console.log({id, to, type, data});\r\n            break;\r\n    }\r\n}\r\n\r\nexport async function remoteAnswerReceived(id, answer) {\r\n    const pc = webRTC_instance.peers[id].connection;\r\n    await pc.setRemoteDescription(answer).catch(error => console.error('Error set remote description', error));\r\n}\r\n\r\nexport async function remoteCandidateReceived(id, candidate) {\r\n    createConnection(id);\r\n    const pc = webRTC_instance.peers[id].connection;\r\n    await pc.addIceCandidate(candidate)\r\n        .catch(error => console.error('Error add iceCandidate', error));\r\n}\r\n\r\nexport async function remoteOfferReceived(id, offer) {\r\n    createConnection(id);\r\n    const pc = webRTC_instance.peers[id].connection;\r\n    await initMedia(id, pc);\r\n\r\n    initConnection(id, pc);\r\n\r\n    await pc.setRemoteDescription(offer).then(() => {\r\n        pc.createAnswer().then(answer => {\r\n            return pc.setLocalDescription(answer).then(() => {\r\n\r\n                socket_instance.sendRTCOverSocket(id, \"answer\", answer);\r\n            })\r\n                .catch(error => console.error('Error set local description', error));\r\n        }).catch(error => console.error('Error create answer', error));\r\n    }).catch(error => console.error('Error set remote description', error));\r\n\r\n\r\n}\r\n\r\nfunction initConnection(id, pc) {\r\n    pc.onicecandidate = function (event) {\r\n        if (event.candidate)\r\n            socket_instance.sendRTCOverSocket(id, \"candidate\", event.candidate);\r\n    }\r\n\r\n    pc.oniceconnectionstatechange = function (event) {\r\n        switch (pc.iceConnectionState) {\r\n            case 'disconnected': {\r\n                delete webRTC_instance.peers[id];\r\n                webRTC_instance.connectionsCount = webRTC_instance.connectionsCount - 1;\r\n                console.log(`[${id}] disconnected! Peers: ${webRTC_instance.connectionsCount}`);\r\n                break;\r\n            }\r\n            case 'connected': {\r\n                webRTC_instance.connectionsCount = webRTC_instance.connectionsCount + 1;\r\n                console.log(`[${id}] connected! Peers: ${webRTC_instance.connectionsCount}`);\r\n                break;\r\n            }\r\n            default:\r\n                console.log(pc.iceConnectionState);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /*pc.onnegotiationneeded = async function (event) {\r\n        if (pc.signalingState !== \"stable\") return;\r\n        pc.createOffer().then(offer => {\r\n            pc.setLocalDescription(offer).then(() => {\r\n                socket_instance.sendRTCOverSocket(id, 'offer', pc.localDescription);\r\n            }).catch(error => console.error('Error set local description', error));\r\n        }).catch(error => console.error('Error create offer', error));\r\n    }*/\r\n}\r\n\r\nasync function initMedia(id, pc) {\r\n\r\n    pc.ontrack = function ({streams: [stream]}) {\r\n        webRTC_instance.addStream(id, stream);\r\n    }\r\n\r\n    const localVideo = document.getElementById(`video-${user_instance.user.id}`);\r\n    if (localVideo) {\r\n        localVideo.srcObject = user_instance.localStream;\r\n    }\r\n    user_instance.localStream.getTracks().forEach(track => {\r\n        pc.addTrack(track, user_instance.localStream);\r\n    });\r\n}\r\n\r\nfunction createConnection(id) {\r\n    if (webRTC_instance.peers[id] === undefined) {\r\n        webRTC_instance.peers[id] = {};\r\n        webRTC_instance.peers[id].connection =\r\n            new RTCPeerConnection(webRTC_instance.server);\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport {socket_instance} from \"../../utils/socket\";\r\nimport {user_instance} from \"../../storage/user\";\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [connected, setConnected] = useState('');\r\n\r\n    useEffect(() => {\r\n        socket_instance.addEventListener('error', onError);\r\n        socket_instance.addEventListener('connectionChange', onConnectionChange);\r\n        return () => {\r\n            socket_instance.removeEventListener('error', onError);\r\n            socket_instance.removeEventListener('connectionChange', onConnectionChange);\r\n        };\r\n    }, []);\r\n\r\n    const onError = function (error) {\r\n        // eslint-disable-next-line default-case\r\n        switch (error.type) {\r\n            case 'addUser':\r\n                setError(error.error);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onKeyDown = function (event){\r\n        if (event.keyCode === 13) {\r\n            handlerOnClick();\r\n        }\r\n    }\r\n\r\n    const onConnectionChange = function (data) {\r\n        setConnected(data);\r\n    }\r\n\r\n    const handlerOnUsernameInput = function (event) {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const handlerOnClick = function (value) {\r\n        socket_instance.connect({user: username, room: user_instance.user.room});\r\n    }\r\n\r\n    return <div className={'Login'}>\r\n        <div className={'login-container'}>\r\n            <div className={'login-info-container'}>\r\n                <label htmlFor=\"uname\"><b>Username</b></label>\r\n                <label className=\"info-connected\" style={{color: connected ? '#B1D9CD' : '#FDB196'}}><b>{connected ? 'Connected' : 'Disconnected'}</b></label>\r\n            </div>\r\n            <input type=\"text\"\r\n                   placeholder=\"Enter Username\"\r\n                   onChange={handlerOnUsernameInput}\r\n                   onKeyDown={onKeyDown}\r\n                   required/>\r\n            <div className={'login-error'}>{error}</div>\r\n            <button type=\"submit\" onClick={handlerOnClick}>Login</button>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport {socket_instance} from \"../../utils/socket\";\r\n\r\nexport default function UserList() {\r\n    const [usersList, setUsersList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket_instance.addEventListener('usersChange', onUsersChange);\r\n        return () => {\r\n            socket_instance.removeEventListener('usersChange', onUsersChange);\r\n        };\r\n    }, []);\r\n\r\n    const onUsersChange = (data) => {\r\n        setUsersList([...data]);\r\n    }\r\n\r\n    return <div className={'UsersList'}>\r\n        <div className={'users-list-container'}>\r\n            <ol className={\"users-list\"}>\r\n                {usersList.map(value =>\r\n                    <li key={value.id} className={'list-item'}>\r\n                        <div className={'user-item-gradient'}/>\r\n                        <div className={'user-item-content'}>\r\n                            <h4>{`${value.name}`}</h4>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </ol>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport './style.css';\r\nimport {webRTC_instance} from \"../../../utils/webRTC\";\r\n\r\nexport default function VideoBox({videoId, title, type, onClick}) {\r\n    const videoEl = useRef(null);\r\n    useEffect(() => {\r\n        webRTC_instance.addEventListener(`streamAdded-${videoId}`, handleStream);\r\n        if (videoEl !== null)\r\n            videoEl.current.srcObject = webRTC_instance.getStream(videoId);\r\n        return () => {\r\n            webRTC_instance.addEventListener(`streamAdded-${videoId}`, handleStream);\r\n        }\r\n    }, [])\r\n\r\n    const handleStream = function (stream) {\r\n        if (videoEl !== null)\r\n            videoEl.current.srcObject = stream;\r\n    }\r\n\r\n    const handleClick = function (event) {\r\n        onClick(event);\r\n    }\r\n\r\n    return (<article key={`article-${videoId}`} className=\"video-listing\">\r\n        <div onClick={handleClick}\r\n             id={`title-${videoId}`}\r\n             className=\"video-title\">{title}</div>\r\n        <div className=\"video-container\">\r\n            <video ref={videoEl} autoPlay muted={type === 'local'} className={`${type}-video`}\r\n                   id={`video-${videoId}`}/>\r\n        </div>\r\n    </article>);\r\n}","export default __webpack_public_path__ + \"static/media/camera.53281603.svg\";","export default __webpack_public_path__ + \"static/media/microphone.b5ad8492.svg\";","import React, {useState} from 'react';\r\nimport camera_icon from './assets/camera.svg';\r\nimport microphone_icon from './assets/microphone.svg';\r\nimport './style.css';\r\nimport {user_instance} from \"../../../storage/user\";\r\n\r\nexport default function StreamControls() {\r\n    const [video, setVideo] = useState(user_instance.localStream.getVideoTracks()[0].enabled);\r\n    const [audio, setAudio] = useState(user_instance.localStream.getVideoTracks()[0].enabled);\r\n    const videoTrack = user_instance.localStream.getVideoTracks()[0];\r\n    const audioTrack = user_instance.localStream.getAudioTracks()[0];\r\n\r\n    const toggleCamera = function () {\r\n        videoTrack.enabled = !videoTrack.enabled;\r\n        setVideo(videoTrack.enabled)\r\n    }\r\n\r\n    const toggleMic = function () {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setAudio(audioTrack.enabled);\r\n    }\r\n\r\n    return (<div className={'StreamControls'}>\r\n        <div className={'controls-container'}>\r\n            <div style={{backgroundColor: (video ? '#B1D9CD' : '#FDB196')}} className={'round-container'} onClick={toggleCamera}>\r\n                <img src={camera_icon} alt=\"camera icon\" />\r\n            </div>\r\n            <div style={{backgroundColor: (audio ? '#B1D9CD' : '#FDB196')}} className={'round-container'} onClick={toggleMic}>\r\n                <img src={microphone_icon} alt=\"microphone icon\"/>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import './style.css';\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {socket_instance} from \"../../utils/socket\";\r\nimport {user_instance} from \"../../storage/user\";\r\nimport VideoBox from \"./videoBox/index\";\r\nimport StreamControls from \"./streamControls\";\r\n\r\nexport default function VideoGrid() {\r\n    const [usersList, setUsersList] = useState([]);\r\n    const selectedVideo = useRef(null);\r\n\r\n    useEffect(() => {\r\n        socket_instance.addEventListener('usersChange', onUsersChange);\r\n        return () => {\r\n            socket_instance.removeEventListener('usersChange', onUsersChange);\r\n        };\r\n    }, []);\r\n\r\n    const onUsersChange = (data) => {\r\n        setUsersList([...data]);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        selectedVideo.current.srcObject = document.getElementById(`video-${event.target.id.substr(6)}`).srcObject;\r\n    }\r\n\r\n    return <div className={'VideoGrid'}>\r\n        <div className={\"video-row-container\"}>\r\n\r\n            <VideoBox title={user_instance.user.name}\r\n                      videoId={user_instance.user.id} onClick={handleClick}\r\n                      type={'local'}/>\r\n            {\r\n                usersList.filter(user => user.id !== user_instance.user.id).map(user =>\r\n                    <VideoBox key={`video-${user.id}`} title={user.name}\r\n                              videoId={user.id} onClick={handleClick}\r\n                              type={'remote'}/>\r\n                )\r\n            }\r\n\r\n        </div>\r\n        <div className={'selected-video-container'}>\r\n            <video ref={selectedVideo} autoPlay muted className=\"selected-video\" id=\"selected-video\"/>\r\n        </div>\r\n        <div className={'stream-controls-container'}>\r\n            <StreamControls/>\r\n        </div>\r\n    </div>;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport {chatHistory_instance} from \"./store\";\r\n\r\nexport default function ChatHistory() {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        chatHistory_instance.addEventListener('newMessage', onMessage);\r\n        return () => {\r\n            chatHistory_instance.removeEventListener('newMessage', onMessage);\r\n        };\r\n    }, []);\r\n    const onMessage = (event) => {\r\n        setMessages(v => [...v, event]);\r\n    }\r\n\r\n    const formatTime = (time) => `${('0' + time.getHours()).substr(-2)}:${('0' + time.getMinutes()).substr(-2)}`\r\n\r\n    return <div className={'ChatHistory'}>\r\n        <div className={'chat-history-container'}>\r\n            {messages.map((data, i) =>\r\n                <div key={i}>\r\n                    <div className={'info-container'}>\r\n\r\n                        <div className={'user'}>{`${data.user}`}</div>\r\n                        <div className={'time'}>\r\n                            {formatTime(data.data.time)}\r\n                        </div>\r\n                    </div>\r\n                    <span style={{whiteSpace: 'pre-line'}} className={'message'}>{`${data.data.text}`}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useRef, useState,} from \"react\";\r\nimport './style.css'\r\nimport {socket_instance} from \"../../../utils/socket\";\r\n\r\nexport default function AutoTextArea() {\r\n    const textAreaRef = useRef(null);\r\n    const [text, setText] = useState(\"\");\r\n    const [textAreaHeight, setTextAreaHeight] = useState(\"auto\");\r\n\r\n    useEffect(() => {\r\n        setTextAreaHeight(`${textAreaRef.current.scrollHeight + 2}px`);\r\n    }, [text]);\r\n\r\n    const onChangeHandler = function (event) {\r\n        setTextAreaHeight(\"auto\");\r\n        setText(event.target.value);\r\n        console.log(text.split('\\r\\n'));\r\n    };\r\n\r\n    const onKeyDown = function (event) {\r\n        if (!event.shiftKey && event.keyCode === 13) {\r\n            sendMessage();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    const sendMessage = function () {\r\n        const msg = text.trim();\r\n        if (msg.length === 0)\r\n            return;\r\n        socket_instance.sendNewMessage(msg);\r\n\r\n        setText('');\r\n        setTextAreaHeight(\"auto\");\r\n    }\r\n\r\n    return (\r\n        <div className={'AutoTextArea'}>\r\n            <div className={'text-area-container'}>\r\n\t\t\t<textarea className={'auto-text-area'}\r\n                      ref={textAreaRef}\r\n                      rows={1}\r\n                      style={{\r\n                          height: textAreaHeight,\r\n                          flexGrow: 1,\r\n                      }}\r\n                      value={text}\r\n                      onChange={onChangeHandler}\r\n                      onKeyDown={onKeyDown}\r\n            />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './style.css';\r\nimport ChatHistory from \"./chatHistory\";\r\nimport AutoTextArea from \"./chatInput\";\r\n\r\nexport default function Chat() {\r\n    return <div className={'Chat'}>\r\n        <ChatHistory/>\r\n        <AutoTextArea/>\r\n    </div>\r\n}","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {webRTC_instance} from \"./utils/webRTC\";\nimport Login from './components/login'\nimport {socket_instance} from \"./utils/socket\";\nimport UserList from \"./components/usersList\";\nimport VideoGrid from \"./components/videoGrid\";\nimport Chat from \"./components/chat\";\nimport {user_instance} from \"./storage/user\";\n\nfunction App() {\n    const [logged, setLogged] = useState(false)\n\n    const onLogged = (data) => {\n        user_instance.user = data.data;\n        setLogged(true);\n    }\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({video: true, audio: true})\n            .then(stream => user_instance.localStream = stream)\n            .catch(error => console.error('Error get user media', error));\n\n        socket_instance.addEventListener('logged', onLogged);\n        if (!logged)\n            return;\n        window.addEventListener(\"beforeunload\", socket_instance.onBeforeUnload);\n        window.addEventListener(\"beforeunload\", webRTC_instance.onBeforeUnload);\n        return () => {\n            socket_instance.removeEventListener('logged', onLogged);\n            window.removeEventListener(\"beforeunload\", webRTC_instance.onBeforeUnload);\n            window.removeEventListener(\"beforeunload\", socket_instance.onBeforeUnload);\n        };\n    }, [logged]);\n\n    return <div className=\"App\"> {logged ? <>\n        <>\n            <div className='App-body'>\n                <div className={'video-grid-container'}>\n                    <VideoGrid/>\n                </div>\n                <div className={'info-chat-container'}>\n                    <UserList/>\n                    <Chat/>\n                </div>\n            </div>\n        </>\n    </> : <Login/>}\n    </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}