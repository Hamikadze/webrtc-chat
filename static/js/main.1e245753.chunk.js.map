{"version":3,"sources":["storage/user.js","utils/uuid.js","utils/eventListenerClass.js","storage/chat.js","utils/socket.js","storage/mediaStreams.js","utils/webRTC.js","components/login/index.js","components/usersList/index.js","components/videoGrid/videoBox/index.js","components/videoGrid/streamControls/assets/camera.svg","components/videoGrid/streamControls/assets/microphone.svg","components/videoGrid/streamControls/index.js","components/videoGrid/index.js","components/chat/chatHistory/index.js","components/chat/chatInput/index.js","components/chat/index.js","App.js","reportWebVitals.js","index.js"],"names":["user_instance","this","_eventListeners","_user","id","name","room","roomId","_localStream","value","console","log","undefined","url","URL","window","location","href","urlParams","URLSearchParams","search","get","s4","Math","floor","random","toString","uuid","append","EventListenerClass","type","handler","push","filter","i","chat_instance","_log","data","time","Date","forEach","socket_instance","onConnect","socket","connected","onError","onLogged","onRoomData","users","onBeforeUnload","emit","onMessage","sendNewMessage","message","text","sendRTCOverSocket","to","user","io","reconnectionDelayMax","on","webRTC_instance","socketReceived","webrtcNewPeer","JSON","stringify","username","media_instance","_id","getUserMedia","then","stream","catch","error","_streams","addStream","navigator","mediaDevices","video","audio","track","getAudioTracks","getVideoTracks","warn","getAudioTrack","enabled","peers","hasOwnProperty","channel","close","e","a","createConnection","pc","connection","initConnection","initMedia","createOffer","offer","setLocalDescription","remoteCandidateReceived","remoteOfferReceived","remoteAnswerReceived","answer","setRemoteDescription","candidate","addIceCandidate","createAnswer","onicecandidate","event","oniceconnectionstatechange","iceConnectionState","removeStream","connectionsCount","ontrack","streams","localStream","getTracks","addTrack","RTCPeerConnection","server","_connectionsCount","iceServers","credential","count","keys","Login","useState","setUsername","setError","setConnected","useEffect","addEventListener","onConnectionChange","removeEventListener","handlerOnClick","connect","className","htmlFor","style","color","placeholder","onChange","target","onKeyDown","keyCode","required","onClick","UserList","usersList","setUsersList","onUsersChange","map","VideoBox","videoId","title","videoEl","useRef","onStreamAdded","onStreamToggled","current","srcObject","getStream","ref","autoPlay","muted","StreamControls","getState","localId","setVideo","setAudio","backgroundColor","toggleStream","src","camera_icon","alt","microphone_icon","VideoGrid","selectedVideo","handleClick","document","getElementById","substr","ChatHistory","messages","setMessages","v","getHours","getMinutes","whiteSpace","AutoTextArea","textAreaRef","setText","textAreaHeight","setTextAreaHeight","scrollHeight","sendMessage","msg","trim","length","rows","height","flexGrow","split","shiftKey","preventDefault","viewBox","d","Chat","App","logged","setLogged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e245753.chunk.js","sourcesContent":["import {uuid} from \"../utils/uuid\";\r\n\r\nclass user {\r\n    constructor() {\r\n        this._eventListeners = {};\r\n        this._user = {id: '', name: '', room: this.roomId};\r\n    }\r\n\r\n    get localStream() {\r\n        return this._localStream;\r\n    }\r\n\r\n    set localStream(value) {\r\n        this._localStream = value;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    set user(value) {\r\n        this._user = value;\r\n        console.log('Logged', this._user);\r\n    }\r\n\r\n    get roomId() {\r\n        if (this._user === undefined || this._user.room === undefined) {\r\n            const url = new URL(window.location.href);\r\n            const urlParams = new URLSearchParams(url.search);\r\n            let room = urlParams.get('room')\r\n            if (!room) {\r\n                room = uuid();\r\n                urlParams.append('room', room);\r\n                window.location.search = urlParams;\r\n            }\r\n            return room;\r\n        } else {\r\n            return this._user.room;\r\n        }\r\n    }\r\n}\r\n\r\nexport const user_instance = new user();","\r\nexport const uuid = function() {\r\n    const s4 = function () {\r\n        return Math.floor(Math.random() * 0x10000).toString(16);\r\n    };\r\n    return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n}","export default class EventListenerClass{\r\n    constructor() {\r\n        this._eventListeners = {};\r\n    }\r\n\r\n    addEventListener(type, handler) {\r\n        if (this._eventListeners[type] === undefined)\r\n            this._eventListeners[type] = [];\r\n        this._eventListeners[type].push(handler);\r\n    }\r\n\r\n    removeEventListener(type, handler) {\r\n        this._eventListeners[type] = this._eventListeners[type]\r\n            .filter(i => i.toString() !== handler.toString());\r\n    }\r\n}","import EventListenerClass from \"../utils/eventListenerClass\";\r\n\r\nclass chat  extends EventListenerClass{\r\n    constructor() {\r\n        super();\r\n        this._eventListeners = {};\r\n        this._log = [];\r\n        //this._onLogChange = onLogChange;\r\n    }\r\n\r\n    get log() {\r\n        return this._log;\r\n    }\r\n\r\n    push(value) {\r\n        value.data.time = new Date(value.data.time);\r\n        this._log.push(value);\r\n        this._eventListeners['newMessage']?.forEach(i => i(value));\r\n        this._eventListeners['newMessages']?.forEach(i => i(this._log));\r\n    }\r\n}\r\n\r\nexport const chat_instance = new chat();","import {io} from \"socket.io-client\";\r\nimport {user_instance} from \"../storage/user\";\r\nimport {chat_instance} from \"../storage/chat\";\r\nimport EventListenerClass from \"./eventListenerClass\";\r\nimport {webRTC_instance} from \"./webRTC\";\r\n\r\nconst ENDPOINT = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\r\n    'http://localhost:4001' : 'https://webrtc-chat-api.herokuapp.com/';\r\n\r\n\r\nclass socket extends EventListenerClass {\r\n    constructor() {\r\n        super();\r\n        this._eventListeners = {};\r\n        this.socket = io(ENDPOINT, {\r\n            reconnectionDelayMax: 10000\r\n        });\r\n        this.socket.on(\"connect\", this.onConnect);\r\n        this.socket.on(\"disconnect\", this.onConnect);\r\n    }\r\n\r\n    connect({user, room}) {\r\n        if (!this.socket.connected) {\r\n            return;\r\n        }\r\n        this.socket.on(\"webrtc\", webRTC_instance.socketReceived);\r\n        this.socket.on(\"webrtc_new_peer\", webRTC_instance.webrtcNewPeer);\r\n        this.socket.on(\"roomData\", this.onRoomData);\r\n        this.socket.on(\"message\", this.onMessage);\r\n        this.socket.on(\"logged\", this.onLogged);\r\n        this.socket.on(\"error\", this.onError);\r\n\r\n\r\n        // Сразу отправляем запрос на вход в комнату\r\n        this.socket.emit(\"join\", JSON.stringify({username: user, room: room}));\r\n    }\r\n\r\n    onConnect = (data) => {\r\n        this._eventListeners['connectionChange']?.forEach(i => {\r\n            i(this.socket.connected);\r\n        });\r\n    }\r\n\r\n    onError = (data) =>  {\r\n        this._eventListeners['error']?.forEach(i => {\r\n            i(data);\r\n        });\r\n    }\r\n\r\n    onLogged = (data) =>  {\r\n        this._eventListeners['logged']?.forEach(i => {\r\n            i(data);\r\n        });\r\n    }\r\n\r\n    onRoomData = (data) =>  {\r\n        this._eventListeners['usersChange']?.forEach(i => {\r\n            i(data.users);\r\n        });\r\n    }\r\n\r\n    onBeforeUnload = () =>  {\r\n        this.socket.emit('disconnect');\r\n    }\r\n\r\n\r\n    onMessage = (data) =>  {\r\n        chat_instance.push(data);\r\n    }\r\n\r\n    sendNewMessage = (message) =>  {\r\n        socket_instance.socket.emit(\"sendMessage\", {text: message});\r\n    }\r\n\r\n    sendRTCOverSocket = (to, type, message) =>  {\r\n        socket_instance.socket.emit(\"webrtc\", {id: user_instance.user.id, to: to, type: type, data: message});\r\n    }\r\n}\r\n\r\nexport const socket_instance = new socket();","import EventListenerClass from \"../utils/eventListenerClass\";\r\n\r\nclass mediaStreams extends EventListenerClass {\r\n    constructor() {\r\n        super();\r\n        this._id = null;\r\n        this._localStream = undefined;\r\n        this.getUserMedia().then(stream => {\r\n            this._localStream = stream;\r\n        })\r\n            .catch(error => console.error('Error get user media', error));\r\n        this._streams = {};\r\n    }\r\n\r\n    get localId() {\r\n        return this._id;\r\n    }\r\n\r\n    set localId(value) {\r\n        this._id = value;\r\n        this.addStream(value, this._localStream);\r\n    }\r\n\r\n    get localStream() {\r\n        return this._localStream;\r\n    }\r\n\r\n    getUserMedia() {\r\n        return navigator.mediaDevices.getUserMedia({video: true, audio: true});\r\n    }\r\n\r\n    addStream(id, stream) {\r\n        this._streams[id] = stream;\r\n        this._eventListeners[`streamAdded-${id}`]?.forEach(i => {\r\n            if (this._streams[id] !== undefined)\r\n                i(this._streams[id])\r\n        });\r\n        if (this._id === id) {\r\n            this._localStream = this._streams[id];\r\n        }\r\n    }\r\n\r\n    getAudioTrack(id, type) {\r\n        let track;\r\n        if (this._streams[id] === undefined) {\r\n            console.warn('Stream doesn\\'t exist', id)\r\n            return undefined;\r\n        }\r\n        switch (type) {\r\n            case 'audio':\r\n                track = this._streams[id].getAudioTracks()[0];\r\n                break;\r\n            case 'video':\r\n                track = this._streams[id].getVideoTracks()[0];\r\n                break;\r\n            default:\r\n                console.warn('Unknown stream type', type);\r\n                return undefined;\r\n        }\r\n        return track;\r\n    }\r\n\r\n    getState(id, type) {\r\n        return this.getAudioTrack(id, type) ?? {enabled: false};\r\n    }\r\n\r\n    toggleStream(id, type) {\r\n        let track = this.getAudioTrack(id, type);\r\n        if (track !== undefined) {\r\n            track.enabled = !track.enabled;\r\n            this._eventListeners[`streamToggled-${id}`]?.forEach(i => {\r\n                if (this._streams[id] !== undefined)\r\n                    i(this._streams[id])\r\n            });\r\n        }\r\n        return track ?? {enabled: false};\r\n    }\r\n\r\n    removeStream(id) {\r\n        if (this._streams[id] !== undefined)\r\n            delete this._streams[id];\r\n    }\r\n\r\n    getStream(id) {\r\n        console.log(id);\r\n        console.log(this._streams);\r\n        console.log(this._streams[id]);\r\n        return this._streams[id];\r\n    }\r\n}\r\n\r\nexport const media_instance = new mediaStreams();","import {socket_instance} from \"./socket\";\r\nimport EventListenerClass from \"./eventListenerClass\";\r\nimport {media_instance} from \"../storage/mediaStreams\";\r\n\r\nclass webRTC extends EventListenerClass {\r\n    constructor() {\r\n        super();\r\n        this._eventListeners = {};\r\n        this._connectionsCount = 0;\r\n        this.peers = {};\r\n        this.server = {\r\n            iceServers: [\r\n                //Сервер на heroku с использованием node-turn\r\n                {\r\n                    url: 'turn:webrtc-chat-api.herokuapp.com:3478',\r\n                    username: 'turnclient',\r\n                    credential: '$0mep@$$w0rd'\r\n                },\r\n                {url: 'stun:webrtc-chat-api.herokuapp.com'},\r\n                //Сервер на собственном сервере с использованием coturn\r\n                {\r\n                    url: 'turn:217.150.77.131:3478',\r\n                    username: 'turnclient',\r\n                    credential: '$0mep@$$w0rd'\r\n                },\r\n                {url: 'stun:217.150.77.131:3478'},\r\n                //Google stun сервера\r\n                {url: 'stun:stun.l.google.com:19302'},\r\n                {url: 'stun:stun.l.google.com:19302'},\r\n                {url: 'stun:stun1.l.google.com:19302'},\r\n            ]\r\n        };\r\n    }\r\n\r\n    get connectionsCount() {\r\n        return this._connectionsCount;\r\n\r\n    }\r\n\r\n    set connectionsCount(value) {\r\n        this._connectionsCount = value;\r\n        this._eventListeners['connectionsChange']?.forEach(i => {\r\n            i({\r\n                count: this._connectionsCount,\r\n                peers: this.peers.keys\r\n            })\r\n        });\r\n    }\r\n\r\n    onBeforeUnload = () => {\r\n        for (let id in this.peers) {\r\n            if (this.peers.hasOwnProperty(id)) {\r\n                if (this.peers[id].channel !== undefined) {\r\n                    try {\r\n                        this.peers[id].channel.close();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    webrtcNewPeer = async ({user, data}) => {\r\n        if (user !== 'SERVER')\r\n            return;\r\n        const {id, name, room} = data;\r\n        console.log('Creating new peer', [user, data]);\r\n        this.createConnection(id);\r\n        const pc = this.peers[id].connection;\r\n\r\n        this.initConnection(id, pc);\r\n\r\n        await this.initMedia(id, pc);\r\n        await pc.createOffer().then(offer => {\r\n            return pc.setLocalDescription(offer).then(() => {\r\n                socket_instance.sendRTCOverSocket(id, \"offer\", offer);\r\n            }).catch(error => console.error('Error set local description', error));\r\n        }).catch(error => console.error('Error create offer', error));\r\n\r\n\r\n    }\r\n\r\n    socketReceived = ({id, to, type, data}) => {\r\n        //console.log({id, to, type, data});\r\n        switch (type) {\r\n            case \"candidate\":\r\n                this.remoteCandidateReceived(id, data);\r\n                break;\r\n            case \"offer\":\r\n                this.remoteOfferReceived(id, data);\r\n                break;\r\n            case \"answer\":\r\n                this.remoteAnswerReceived(id, data);\r\n                break;\r\n            default:\r\n                console.log(`Unknown type received from socket:`);\r\n                console.log({id, to, type, data});\r\n                break;\r\n        }\r\n    }\r\n\r\n    remoteAnswerReceived = async (id, answer) => {\r\n        const pc = this.peers[id].connection;\r\n        await pc.setRemoteDescription(answer).catch(error => console.error('Error set remote description', error));\r\n    }\r\n\r\n    remoteCandidateReceived = async (id, candidate) => {\r\n        this.createConnection(id);\r\n        const pc = this.peers[id].connection;\r\n        await pc.addIceCandidate(candidate)\r\n            .catch(error => console.error('Error add iceCandidate', error));\r\n    }\r\n\r\n    remoteOfferReceived = async (id, offer) => {\r\n        this.createConnection(id);\r\n        const pc = this.peers[id].connection;\r\n        await this.initMedia(id, pc);\r\n        this.initConnection(id, pc);\r\n        await pc.setRemoteDescription(offer).then(() => {\r\n            pc.createAnswer().then(answer => {\r\n                return pc.setLocalDescription(answer).then(() => {\r\n                    socket_instance.sendRTCOverSocket(id, \"answer\", answer);\r\n                }).catch(error => console.error('Error set local description', error));\r\n            }).catch(error => console.error('Error create answer', error));\r\n        }).catch(error => console.error('Error set remote description', error));\r\n    }\r\n\r\n    initConnection = (id, pc) => {\r\n        pc.onicecandidate = function (event) {\r\n            if (event.candidate)\r\n                socket_instance.sendRTCOverSocket(id, \"candidate\", event.candidate);\r\n        }\r\n\r\n\r\n        pc.oniceconnectionstatechange = (event) => {\r\n            switch (pc.iceConnectionState) {\r\n                case 'disconnected': {\r\n                    delete this.peers[id];\r\n                    media_instance.removeStream(id);\r\n                    this.connectionsCount = this.connectionsCount - 1;\r\n                    console.log(`[${id}] disconnected. Peers: ${this.connectionsCount}`);\r\n                    break;\r\n                }\r\n                case 'connected': {\r\n                    this.connectionsCount = this.connectionsCount + 1;\r\n                    console.log(`[${id}] connected. Peers: ${this.connectionsCount}`);\r\n                    break;\r\n                }\r\n                default:\r\n                    console.log(pc.iceConnectionState);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        /* The block is disabled until better times when I\r\n         finish tracking access to camera permission\r\n\r\n        pc.onnegotiationneeded = async function (event) {\r\n            if (pc.signalingState !== \"stable\") return;\r\n            pc.createOffer().then(offer => {\r\n                pc.setLocalDescription(offer).then(() => {\r\n                    socket_instance.sendRTCOverSocket(id, 'offer', pc.localDescription);\r\n                }).catch(error => console.error('Error set local description', error));\r\n            }).catch(error => console.error('Error create offer', error));\r\n        }         */\r\n    }\r\n\r\n    //Initializes onTrack event and adding media stream to track\r\n    initMedia = async (id, pc) => {\r\n        pc.ontrack = function ({streams: [stream]}) {\r\n            media_instance.addStream(id, stream);\r\n        }\r\n\r\n        if (media_instance.localStream !== undefined)\r\n            media_instance.localStream.getTracks().forEach(track => {\r\n                pc.addTrack(track, media_instance.localStream);\r\n            })\r\n    }\r\n\r\n    //Initializes a new connection\r\n    createConnection = (id) => {\r\n        if (this.peers[id] === undefined) {\r\n            this.peers[id] = {};\r\n            this.peers[id].connection =\r\n                new RTCPeerConnection(this.server);\r\n        }\r\n    }\r\n}\r\n\r\nexport const webRTC_instance = new webRTC();\r\n","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport {socket_instance} from \"../../utils/socket\";\r\nimport {user_instance} from \"../../storage/user\";\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [connected, setConnected] = useState('');\r\n\r\n    useEffect(() => {\r\n        socket_instance.addEventListener('error', onError);\r\n        socket_instance.addEventListener('connectionChange', onConnectionChange);\r\n        return () => {\r\n            socket_instance.removeEventListener('error', onError);\r\n            socket_instance.removeEventListener('connectionChange', onConnectionChange);\r\n        };\r\n    }, []);\r\n\r\n    const onError = function (error) {\r\n        // eslint-disable-next-line default-case\r\n        switch (error.type) {\r\n            case 'addUser':\r\n                setError(error.error);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onKeyDown = function (event){\r\n        if (event.keyCode === 13) {\r\n            handlerOnClick();\r\n        }\r\n    }\r\n\r\n    const onConnectionChange = function (data) {\r\n        setConnected(data);\r\n    }\r\n\r\n    const handlerOnUsernameInput = function (event) {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const handlerOnClick = function (value) {\r\n        socket_instance.connect({user: username, room: user_instance.user.room});\r\n    }\r\n\r\n    return <div className={'Login'}>\r\n        <div className={'login-container'}>\r\n            <div className={'login-info-container'}>\r\n                <label htmlFor=\"uname\"><b>Username</b></label>\r\n                <label className=\"info-connected\" style={{color: connected ? '#B1D9CD' : '#FDB196'}}><b>{connected ? 'Connected' : 'Disconnected'}</b></label>\r\n            </div>\r\n            <input type=\"text\"\r\n                   placeholder=\"Enter Username\"\r\n                   onChange={handlerOnUsernameInput}\r\n                   onKeyDown={onKeyDown}\r\n                   required/>\r\n            <div className={'login-error'}>{error}</div>\r\n            <button type=\"submit\" onClick={handlerOnClick}>Login</button>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport {socket_instance} from \"../../utils/socket\";\r\n\r\nexport default function UserList() {\r\n    const [usersList, setUsersList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket_instance.addEventListener('usersChange', onUsersChange);\r\n        return () => {\r\n            socket_instance.removeEventListener('usersChange', onUsersChange);\r\n        };\r\n    }, []);\r\n\r\n    const onUsersChange = (data) => {\r\n        setUsersList([...data]);\r\n    }\r\n\r\n    return <div className={'UsersList'}>\r\n        <div className={'users-list-container'}>\r\n            <ol className={\"users-list\"}>\r\n                {usersList.map(value =>\r\n                    <li key={value.id} className={'list-item'}>\r\n                        <div className={'user-item-gradient'}/>\r\n                        <div className={'user-item-content'}>\r\n                            <h4>{`${value.name}`}</h4>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </ol>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useRef} from 'react';\r\nimport './style.css';\r\nimport {media_instance} from \"../../../storage/mediaStreams\";\r\n\r\nexport default function VideoBox({videoId, title, type, onClick}) {\r\n    const videoEl = useRef(null);\r\n    useEffect(() => {\r\n        media_instance.addEventListener(`streamAdded-${videoId}`, onStreamAdded);\r\n        media_instance.addEventListener(`streamToggled-${videoId}`, onStreamToggled);\r\n        if (videoEl !== null) {\r\n            videoEl.current.srcObject = media_instance.getStream(videoId);\r\n            console.log([videoId, media_instance.getStream(videoId), media_instance._streams]);\r\n        }\r\n        return () => {\r\n            media_instance.removeEventListener(`streamAdded-${videoId}`, onStreamAdded);\r\n            media_instance.removeEventListener(`streamToggled-${videoId}`, onStreamToggled);\r\n        }\r\n    }, [])\r\n\r\n    const onStreamAdded = function (stream) {\r\n        if (videoEl !== null)\r\n            videoEl.current.srcObject = stream;\r\n    }\r\n\r\n    const onStreamToggled = function (stream) {\r\n        if (videoEl !== null)\r\n            videoEl.current.srcObject = stream;\r\n    }\r\n\r\n    const handleClick = function (event) {\r\n        onClick(event);\r\n    }\r\n\r\n    return (<article key={`article-${videoId}`} className=\"video-listing\">\r\n        <div onClick={handleClick}\r\n             id={`title-${videoId}`}\r\n             className=\"video-title\">{title}</div>\r\n        <div className=\"video-container\">\r\n            <video ref={videoEl} autoPlay muted={type === 'local'} className={`${type}-video`}\r\n                   id={`video-${videoId}`}/>\r\n        </div>\r\n    </article>);\r\n}","export default __webpack_public_path__ + \"static/media/camera.53281603.svg\";","export default __webpack_public_path__ + \"static/media/microphone.b5ad8492.svg\";","import React, {useState} from 'react';\r\nimport camera_icon from './assets/camera.svg';\r\nimport microphone_icon from './assets/microphone.svg';\r\nimport './style.css';\r\nimport {media_instance} from \"../../../storage/mediaStreams\";\r\n\r\nexport default function StreamControls() {\r\n    const [video, setVideo] = useState(media_instance.getState(media_instance.localId, 'video').enabled);\r\n    const [audio, setAudio] = useState(media_instance.getState(media_instance.localId, 'audio').enabled);\r\n\r\n    const toggleCamera = function () {\r\n        setVideo(media_instance.toggleStream(media_instance.localId, 'video').enabled);\r\n    }\r\n\r\n    const toggleMic = function () {\r\n        setAudio(media_instance.toggleStream(media_instance.localId, 'audio').enabled);\r\n    }\r\n\r\n    return (<div className={'StreamControls'}>\r\n        <div className={'controls-container'}>\r\n            <div style={{backgroundColor: (video ? '#B1D9CD' : '#FDB196')}} className={'round-container'}\r\n                 onClick={toggleCamera}>\r\n                <img src={camera_icon} alt=\"camera icon\"/>\r\n            </div>\r\n            <div style={{backgroundColor: (audio ? '#B1D9CD' : '#FDB196')}} className={'round-container'}\r\n                 onClick={toggleMic}>\r\n                <img src={microphone_icon} alt=\"microphone icon\"/>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import './style.css';\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {socket_instance} from \"../../utils/socket\";\r\nimport {user_instance} from \"../../storage/user\";\r\nimport VideoBox from \"./videoBox/index\";\r\nimport StreamControls from \"./streamControls\";\r\n\r\nexport default function VideoGrid() {\r\n    const [usersList, setUsersList] = useState([]);\r\n    const selectedVideo = useRef(null);\r\n\r\n    useEffect(() => {\r\n        socket_instance.addEventListener('usersChange', onUsersChange);\r\n        return () => {\r\n            socket_instance.removeEventListener('usersChange', onUsersChange);\r\n        };\r\n    }, []);\r\n\r\n    const onUsersChange = (data) => {\r\n        setUsersList([...data]);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        selectedVideo.current.srcObject = document.getElementById(`video-${event.target.id.substr(6)}`).srcObject;\r\n    }\r\n\r\n    return <div className={'VideoGrid'}>\r\n        <div className={\"video-row-container\"}>\r\n\r\n            <VideoBox title={user_instance.user.name}\r\n                      videoId={user_instance.user.id} onClick={handleClick}\r\n                      type={'local'}/>\r\n            {\r\n                usersList.filter(user => user.id !== user_instance.user.id).map(user =>\r\n                    <VideoBox key={`video-${user.id}`} title={user.name}\r\n                              videoId={user.id} onClick={handleClick}\r\n                              type={'remote'}/>\r\n                )\r\n            }\r\n\r\n        </div>\r\n        <div className={'selected-video-container'}>\r\n            <video ref={selectedVideo} autoPlay muted className=\"selected-video\" id=\"selected-video\"/>\r\n        </div>\r\n        <div className={'stream-controls-container'}>\r\n            <StreamControls/>\r\n        </div>\r\n    </div>;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport {chat_instance} from \"../../../storage/chat\";\r\n\r\nexport default function ChatHistory() {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        chat_instance.addEventListener('newMessage', onMessage);\r\n        return () => {\r\n            chat_instance.removeEventListener('newMessage', onMessage);\r\n        };\r\n    }, []);\r\n    const onMessage = (event) => {\r\n        setMessages(v => [...v, event]);\r\n    }\r\n\r\n    const formatTime = (time) => `${('0' + time.getHours()).substr(-2)}:${('0' + time.getMinutes()).substr(-2)}`\r\n\r\n    return <div className={'ChatHistory'}>\r\n        <div className={'chat-history-container'}>\r\n            {messages.map((data, i) =>\r\n                <div key={i}>\r\n                    <div className={'info-container'}>\r\n\r\n                        <div className={'user'}>{`${data.user}`}</div>\r\n                        <div className={'time'}>\r\n                            {formatTime(data.data.time)}\r\n                        </div>\r\n                    </div>\r\n                    <span style={{whiteSpace: 'pre-line'}} className={'message'}>{`${data.data.text}`}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useRef, useState,} from \"react\";\r\nimport './style.css'\r\nimport {socket_instance} from \"../../../utils/socket\";\r\n\r\nexport default function AutoTextArea() {\r\n    const textAreaRef = useRef(null);\r\n    const [text, setText] = useState(\"\");\r\n    const [textAreaHeight, setTextAreaHeight] = useState(\"auto\");\r\n\r\n    useEffect(() => {\r\n        setTextAreaHeight(`${textAreaRef.current.scrollHeight + 2}px`);\r\n    }, [text]);\r\n\r\n    const onChangeHandler = function (event) {\r\n        setTextAreaHeight(\"auto\");\r\n        setText(event.target.value);\r\n        console.log(text.split('\\r\\n'));\r\n    };\r\n\r\n    const onKeyDown = function (event) {\r\n        if (!event.shiftKey && event.keyCode === 13) {\r\n            sendMessage();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    const sendMessage = function () {\r\n        const msg = text.trim();\r\n        if (msg.length === 0)\r\n            return;\r\n        socket_instance.sendNewMessage(msg);\r\n\r\n        setText('');\r\n        setTextAreaHeight(\"auto\");\r\n    }\r\n\r\n    return (\r\n        <div className={'AutoTextArea'}>\r\n            <div className={'text-area-container'}>\r\n\t\t\t<textarea className={'auto-text-area'}\r\n                      ref={textAreaRef}\r\n                      rows={1}\r\n                      style={{\r\n                          height: textAreaHeight,\r\n                          flexGrow: 1,\r\n                      }}\r\n                      value={text}\r\n                      onChange={onChangeHandler}\r\n                      onKeyDown={onKeyDown}\r\n            />\r\n                <button onClick={sendMessage}>\r\n                    <svg id=\"send-icon\" className=\"send-icon\" viewBox=\"0 0 488.721 488.721\">\r\n\r\n                        <path d=\"M483.589,222.024c-5.022-10.369-13.394-18.741-23.762-23.762L73.522,11.331C48.074-0.998,17.451,9.638,5.122,35.086\r\n\t\t\tC-1.159,48.052-1.687,63.065,3.669,76.44l67.174,167.902L3.669,412.261c-10.463,26.341,2.409,56.177,28.75,66.639\r\n\t\t\tc5.956,2.366,12.303,3.595,18.712,3.624c7.754,0,15.408-1.75,22.391-5.12l386.304-186.982\r\n\t\t\tC485.276,278.096,495.915,247.473,483.589,222.024z M58.657,446.633c-8.484,4.107-18.691,0.559-22.798-7.925\r\n\t\t\tc-2.093-4.322-2.267-9.326-0.481-13.784l65.399-163.516h340.668L58.657,446.633z M100.778,227.275L35.379,63.759\r\n\t\t\tc-2.722-6.518-1.032-14.045,4.215-18.773c5.079-4.949,12.748-6.11,19.063-2.884l382.788,185.173H100.778z\"/>\r\n\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './style.css';\r\nimport ChatHistory from \"./chatHistory\";\r\nimport AutoTextArea from \"./chatInput\";\r\n\r\nexport default function Chat() {\r\n    return <div className={'Chat'}>\r\n        <ChatHistory/>\r\n        <AutoTextArea/>\r\n    </div>\r\n}","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {webRTC_instance} from \"./utils/webRTC\";\nimport Login from './components/login'\nimport {socket_instance} from \"./utils/socket\";\nimport UserList from \"./components/usersList\";\nimport VideoGrid from \"./components/videoGrid\";\nimport Chat from \"./components/chat\";\nimport {user_instance} from \"./storage/user\";\nimport {media_instance} from \"./storage/mediaStreams\";\n\nfunction App() {\n    const [logged, setLogged] = useState(false)\n\n    const onLogged = (data) => {\n        user_instance.user = data.data;\n        media_instance.localId = data.data.id;\n        setLogged(true);\n    }\n\n    useEffect(() => {\n        socket_instance.addEventListener('logged', onLogged);\n        if (!logged)\n            return;\n        window.addEventListener(\"beforeunload\", socket_instance.onBeforeUnload);\n        window.addEventListener(\"beforeunload\", webRTC_instance.onBeforeUnload);\n        return () => {\n            socket_instance.removeEventListener('logged', onLogged);\n            window.removeEventListener(\"beforeunload\", webRTC_instance.onBeforeUnload);\n            window.removeEventListener(\"beforeunload\", socket_instance.onBeforeUnload);\n        };\n    }, [logged]);\n\n    return <div className=\"App\"> {logged ? <>\n        <>\n            <div className='App-body'>\n                <div className={'video-grid-container'}>\n                    <VideoGrid/>\n                </div>\n                <div className={'info-chat-container'}>\n                    <UserList/>\n                    <Chat/>\n                </div>\n            </div>\n        </>\n    </> : <Login/>}\n    </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}